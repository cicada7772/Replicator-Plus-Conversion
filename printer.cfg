# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication/USART.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include eddy.cfg]

#[safe_z_home]
#home_xy_position: 115,115 # Change coordinates to the center of your print bed
#speed: 50
#z_hop: 10                 # Move up 10mm
#z_hop_speed: 5

#[bed_mesh]
#speed: 120
#horizontal_move_z: 5
#mesh_min: 10, 10
#mesh_max: 190, 220
#probe_count: 5,5

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
position_endstop: 283
position_max: 283
position_min:-52
homing_speed: 20
homing_retract_dist: 0
endstop_pin: tmc2209_stepper_x:virtual_endstop

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.80
stealthchop_threshold: 999999
driver_SGTHRS: 69
diag_pin:^PC0

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
#endstop_pin: ^PC1
position_endstop: 189
position_max: 189
position_min: -37
homing_speed: 20
homing_retract_dist: 0
endstop_pin: tmc2209_stepper_y:virtual_endstop

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.80
stealthchop_threshold: 999999
driver_SGTHRS: 63
diag_pin:^PC1

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.0
#endstop_pin: probe:z_virtual_endstop
position_max: 150
position_min: -2

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 16
rotation_distance: 8.104769491
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 300
min_extrude_temp: 0

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

#[heater_fan controller_fan]
#pin: PB15
#heater: heater_bed
#heater_temp: 45.0

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_3E0012001150415833323520-if00
# serial: /dev/ttyAMA0
# restart_method: command

[printer]
kinematics: corexy
max_velocity: 800
max_accel: 7000
max_z_velocity: 5
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    G90

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    G90

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G1 X164.5 Y85.0 F5000
    M400
    G28 Z0
  {% endif %}

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set x_wait = printer.toolhead.axis_minimum.x|float + 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float - 2 %}
  
  M190 S{target_bed}                              # Sets target temp for the bed
  
  # Homes the printer and sets absolute positioning
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
  
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S255                                       # Turns on the PT-fan
  {% endif %}

  # Heats up the nozzle up to target via slicer
  M107                                              # Turns off the PT-fan
  M109 S{target_extruder}                           # Heats the nozzle to your print temp

  BED_MESH_CALIBRATE
  BED_MESH_PROFILE LOAD=default

  # Create a purge line and starts the print
  G1 X5 Y4 Z0.4 F10000                             # Moves to starting point
  G1 X115 E20 F1000       # Purge line

[gcode_macro PRINT_END]
gcode:
  G90
  G1 Z150
  TURN_OFF_HEATERS
  M84

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    185, 126, 20  

[input_shaper]

[gcode_macro TEST_SPEED]
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

description: Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU

gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Minimum Cruise Ratio
    {% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        #G90
        #G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        #M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        #G28 X Y
        #G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        #G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
    {% endif %}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small pattern box
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        #G90
        #G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        #G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [input_shaper]
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 40.8
#*# shaper_type_y = zv
#*# shaper_freq_y = 27.8
#*#
#*# [probe_eddy_current btt_eddy]
#*# reg_drive_current = 15
#*# calibrate =
#*# 	0.050000:3193402.589,0.090000:3192510.588,0.130000:3191613.732,
#*# 	0.170000:3190753.756,0.210000:3189869.674,0.250000:3189060.459,
#*# 	0.290000:3188226.278,0.330000:3187448.561,0.370000:3186606.059,
#*# 	0.410000:3185852.140,0.450000:3185081.117,0.490000:3184385.977,
#*# 	0.530000:3183636.208,0.570000:3182955.315,0.610000:3182282.236,
#*# 	0.650000:3181635.635,0.690000:3180939.607,0.730000:3180329.941,
#*# 	0.770000:3179693.826,0.810000:3179102.926,0.850000:3178459.733,
#*# 	0.890000:3177880.931,0.930000:3177313.887,0.970000:3176741.341,
#*# 	1.010000:3176192.740,1.050000:3175656.334,1.090000:3175120.937,
#*# 	1.130000:3174619.600,1.170000:3174102.041,1.210000:3173618.785,
#*# 	1.250000:3173101.481,1.290000:3172639.398,1.330000:3172173.997,
#*# 	1.370000:3171751.866,1.410000:3171262.749,1.450000:3170836.845,
#*# 	1.490000:3170390.924,1.530000:3169982.046,1.570000:3169559.590,
#*# 	1.610000:3169145.832,1.650000:3168757.608,1.690000:3168374.235,
#*# 	1.730000:3167974.920,1.770000:3167604.128,1.810000:3167208.445,
#*# 	1.850000:3166875.599,1.890000:3166521.445,1.930000:3166176.509,
#*# 	1.970000:3165824.393,2.010000:3165502.210,2.050000:3165162.493,
#*# 	2.090000:3164870.911,2.130000:3164529.215,2.170000:3164227.888,
#*# 	2.210000:3163905.524,2.250000:3163632.039,2.290000:3163329.318,
#*# 	2.330000:3163035.695,2.370000:3162764.581,2.410000:3162462.580,
#*# 	2.450000:3162202.710,2.490000:3161933.480,2.530000:3161661.336,
#*# 	2.570000:3161396.218,2.610000:3161143.933,2.650000:3160915.040,
#*# 	2.690000:3160650.548,2.730000:3160430.744,2.770000:3160183.512,
#*# 	2.810000:3159938.266,2.850000:3159720.050,2.890000:3159500.922,
#*# 	2.930000:3159282.671,2.970000:3159074.632,3.010000:3158846.542,
#*# 	3.050000:3158645.511,3.090000:3158437.818,3.130000:3158227.645,
#*# 	3.170000:3158035.614,3.210000:3157825.330,3.250000:3157617.110,
#*# 	3.290000:3157437.095,3.330000:3157271.100,3.370000:3157091.096,
#*# 	3.410000:3156870.879,3.450000:3156705.864,3.490000:3156539.748,
#*# 	3.530000:3156355.553,3.570000:3156174.615,3.610000:3156046.651,
#*# 	3.650000:3155865.163,3.690000:3155695.841,3.730000:3155545.832,
#*# 	3.770000:3155385.352,3.810000:3155227.498,3.850000:3155082.230,
#*# 	3.890000:3154938.310,3.930000:3154772.161,3.970000:3154647.023,
#*# 	4.010000:3154507.093,4.050000:3154360.871
#*#
#*# [temperature_probe btt_eddy]
#*# calibration_temp = 41.410060
#*# drift_calibration =
#*# 	3229535.994724, -1133.121610, 9.458485
#*# 	3209570.865235, -796.273897, 6.239861
#*# 	3196106.298486, -606.679678, 4.477004
#*# 	3185450.828129, -446.031983, 2.953858
#*# 	3176799.012618, -306.268933, 1.627696
#*# 	3170515.535308, -216.125053, 0.775825
#*# 	3166949.685843, -205.714113, 0.723506
#*# 	3162567.196923, -132.119041, 0.004582
#*# 	3159477.672193, -94.061908, -0.336146
#*# drift_calibration_min_temp = 39.06182600535261
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.763708, 0.181238, 0.124994, 0.097232, -0.028743, -0.248594, -0.508754, -0.798910, -1.066390
#*# 	-0.537042, 0.257325, 0.199419, 0.108052, -0.022533, -0.226464, -0.473001, -0.743939, -1.020259
#*# 	-0.569489, 0.278014, 0.210422, 0.119174, -0.008989, -0.233519, -0.476617, -0.723057, -1.033493
#*# 	-0.418202, 0.312625, 0.239195, 0.137337, -0.007118, -0.212141, -0.468180, -0.734723, -1.030136
#*# 	-0.458130, 0.323043, 0.255129, 0.149887, -0.007316, -0.221425, -0.481686, -0.742974, -1.057098
#*# 	-0.272064, 0.382839, 0.319647, 0.198653, 0.022161, -0.199491, -0.474454, -0.757814, -1.072765
#*# 	-0.311845, 0.387878, 0.330262, 0.209380, 0.017342, -0.234316, -0.521372, -0.800005, -1.095035
#*# 	-0.176142, 0.416270, 0.317415, 0.205715, 0.024229, -0.250584, -0.530266, -0.821694, -1.100315
#*# 	-0.254589, 0.400817, 0.249611, 0.176306, -0.017007, -0.303388, -0.625184, -0.922507, -1.269167
#*# x_count = 9
#*# y_count = 9
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 15.0
#*# max_x = 246.44
#*# min_y = 15.0
#*# max_y = 155.0
